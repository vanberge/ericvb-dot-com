<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>sysadmin &#8211; Eric VB.com</title>
	<atom:link href="http://www.ericvb.com/archives/tag/sysadmin/feed" rel="self" type="application/rss+xml" />
	<link>http://www.ericvb.com</link>
	<description>A Distinction Without a Difference...</description>
	<lastBuildDate>Sat, 08 May 2021 02:11:24 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.1</generator>
	<item>
		<title>Installing the VMware Horizon View Client on Ubuntu 14.10</title>
		<link>http://www.ericvb.com/archives/installing-the-vmware-horizon-view-client-on-ubuntu-14-10</link>
					<comments>http://www.ericvb.com/archives/installing-the-vmware-horizon-view-client-on-ubuntu-14-10#respond</comments>
		
		<dc:creator><![CDATA[Vanberge]]></dc:creator>
		<pubDate>Fri, 31 Oct 2014 18:24:08 +0000</pubDate>
				<category><![CDATA[Tech]]></category>
		<category><![CDATA[linux]]></category>
		<category><![CDATA[sysadmin]]></category>
		<category><![CDATA[VMware]]></category>
		<guid isPermaLink="false">http://www.ericvb.com/?p=3738</guid>

					<description><![CDATA[If you&#8217;re a Linux user, you will be happy to know that VMware offers a Linux version of it&#8217;s Horizon View client. However, it&#8217;s a bit of a strange release strategy. For Ubuntu, my distro of choice, VMware only offers the packages for the LTS versions of the popular OS. This is kind of a [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>If you&#8217;re a Linux user, you will be happy to know that VMware offers a Linux version of it&#8217;s <a href="https://www.vmware.com/support/viewclients/doc/horizon-view-client-linux-release-notes.html">Horizon View client</a>.  However, it&#8217;s a bit of a strange release strategy.  For Ubuntu, my distro of choice, VMware only offers the packages for the LTS versions of the popular OS. This is kind of a bummer because the LTS versions of Ubuntu Linux are only released every 2 years.  I really do not like running an OS that&#8217;s even one release behind.</p>
<p>Well, I decided this just cannot stand.  I wanted to have a working View client on my latest Ubuntu 14.10 release which was not an LTS version.</p>
<p>Google was surprisingly unhelpful here, only really offering suggestions on installing a 32 bit version and changing repositories in your sources.list file.  I did not really want to cross the streams that much on a fresh build, so I decided to try and find a cleaner way to get the Horizon View client installed.  This was actually quite a bit easier than I expected.</p>
<p>The good news is, the packages VMware releases for the LTS versions of Ubuntu can pretty much install on any of the later versions of Ubuntu. Here&#8217;s how I did it:</p>
<ul>
<li>Browse to http://archive.canonical.com/ubuntu/pool/partner/v/vmware-view-client/ from your web browser and download the latest .deb package file.  At the time of this writing, the latest version is 2.2.0 for Ubuntu 14.04 LTS</li>
<li>Open the file with archive manager and click &#8220;Install&#8221;, or install it from command line via
<pre>sudo dpkg -i vmware-view-client_2.2.0-0ubuntu0.14.04_i386.deb</pre>
</li>
<li>The package should auto-resolve some dependencies for you and install successfully.</li>
</ul>
<p>That&#8217;s it!  You now have the VMware Horizon View client installed on the latest/greatest release of Ubuntu.  It&#8217;s been working great for me, and I hope it works just as well for anyone who comes across this. </p>
]]></content:encoded>
					
					<wfw:commentRss>http://www.ericvb.com/archives/installing-the-vmware-horizon-view-client-on-ubuntu-14-10/feed</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>How to Build an Ikea &#8220;Lack Rack&#8221; for Your Home Lab</title>
		<link>http://www.ericvb.com/archives/how-to-build-an-ikea-lack-rack-for-your-home-lab</link>
					<comments>http://www.ericvb.com/archives/how-to-build-an-ikea-lack-rack-for-your-home-lab#comments</comments>
		
		<dc:creator><![CDATA[Vanberge]]></dc:creator>
		<pubDate>Mon, 04 Aug 2014 20:57:42 +0000</pubDate>
				<category><![CDATA[Tech]]></category>
		<category><![CDATA[sysadmin]]></category>
		<guid isPermaLink="false">http://www.ericvb.com/?p=3717</guid>

					<description><![CDATA[As a sysadmin, I keep in the loop with the home lab/hobbyist community and am always looking for cool things to try and do with computers. One of the projects I&#8217;ve been looking to take on for some time has been a rack to store my IT equipment. Granted, I don&#8217;t have a ton &#8211; [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>As a sysadmin, I keep in the loop with the home lab/hobbyist community and am always looking for cool things to try and do with computers. One of the projects I&#8217;ve been looking to take on for some time has been a rack to store my IT equipment. Granted, I don&#8217;t have a ton &#8211; a decent server, small NAS, and some other miscellaneous hardware &#8211; but having all this stuff just sitting on the floor of my utility room is not ideal by any means.</p>
<p>Through online forums and /r/homelab on reddit, I came up with a game plan to do this on the cheap.</p>
<p>Enter the Lack Rack.</p>
<p>Somehow, it was discovered that Ikea&#8217;s lack table line provides a near perfect fit for rack-sized hardware. There is a decent amount of information out there if you&#8217;re Googling around for how to build one (Even a <a href="https://wiki.eth0.nl/index.php/LackRack">whole site</a> dedicated to them). But, most of what I found out there was using a side table with legs only. Kind of like this:<a href="http://www.ericvb.com/wp-content/uploads/2014/08/lackrack.png"><br />
</a></p>
<p>I didn&#8217;t really love that style.  It looks and feels half done to me.  So, I decided to take it a little bit further.  I used 2 lack tables since they&#8217;re so cheap which allowed me to give it a base.  Then I wanted to be able to wheel it around, so I also added some caster style wheels on the bottom as well.  Here are a couple pics of what I ended up with</p>
<p>I haven&#8217;t really seen any good writeups with doing a lack rack in this style, and therefore I wanted to go ahead and share my experiences with the interenet.</p>
<p>Here&#8217;s how I made my lack rack</p>
<p>What to get:</p>
<ul>
<li>2x <a href="https://www.ikea.com/us/en/p/lack-side-table-black-20011408/">Ikea Lack Side tables</a>.  I recommend 22 inch version vs. the 21 and 5/8 that seem to be on other guides. This is a perfect/snug fit.  I can&#8217;t imagine a 21 and 5/8 table fitting my server without me having to bump the legs out a little bit.  Note that it seems the black table is the only one that comes in 22&#8221;</li>
<li>If you want to be able to roll this rig, get <a href="http://www.homedepot.com/p/Shepherd-2-in-Polypropylene-Wheel-Swivel-Plate-Caster-9392/100142073">4 caster style wheels</a> that you can easily screw onto the bottom</li>
<li>Some hardware.  You&#8217;ll need at least 4 of something like  <a href="http://www.homedepot.com/p/Crown-Bolt-Zinc-Plated-2-in-Corner-Brace-61552/204765180">these corner brace/angle bracket</a> things, as well as some self-drilling style screws to mount those and your wheels.  I recommend taking some time looking at the screw width, depth, and length.  These are Ikea tables after all, so you have to sort of balance out how hard you tighten them down while being careful not to strip it out.  I didn&#8217;t have any problems using some screws with pretty wide threads that bit into the wood fairly well.  You should need 24 screws if you&#8217;re doing wheels and braces.</li>
<li>Optional:  A couple of <a href="http://www.ikea.com/us/en/catalog/products/50072645/">these rails</a> to set your gear on!  I haven&#8217;t done this yet, and I&#8217;m not sure if I will.  But you might want to line the sides of your lack rack with these.
<p>The Assembly Steps:</li>
</ul>
<ul>
<li>Gather your 2x Ikea Lack side tables (again, I am a fan of the black 22&#8221; version).<br />
<a href="https://www.ericvb.com/wp-content/uploads/2014/08/IMG_20140804_092158.jpg"><img decoding="async" loading="lazy" class="alignright size-medium wp-image-3888" src="https://www.ericvb.com/wp-content/uploads/2014/08/IMG_20140804_092158-266x300.jpg" alt="" width="266" height="300" srcset="http://www.ericvb.com/wp-content/uploads/2014/08/IMG_20140804_092158-266x300.jpg 266w, http://www.ericvb.com/wp-content/uploads/2014/08/IMG_20140804_092158-908x1024.jpg 908w, http://www.ericvb.com/wp-content/uploads/2014/08/IMG_20140804_092158-768x867.jpg 768w, http://www.ericvb.com/wp-content/uploads/2014/08/IMG_20140804_092158-1361x1536.jpg 1361w, http://www.ericvb.com/wp-content/uploads/2014/08/IMG_20140804_092158-624x704.jpg 624w, http://www.ericvb.com/wp-content/uploads/2014/08/IMG_20140804_092158.jpg 1815w" sizes="(max-width: 266px) 100vw, 266px" /></a></li>
<li>Assemble the first table completely per the provided instructions.  It&#8217;s very easy&#8230;  You essentially just have to hand screw the legs onto the top.</li>
<li>Open the 2nd table and take just the top, which you will actually use as the bottom of your rack.  This shall henceforth be referred to as the &#8220;base&#8221;.  You&#8217;ll have 4 legs left over. Find something creative to use them for?</li>
<li>Using the angle bracket/corner brace things, attach your first fully assembled table to the base of the 2nd table.  It might sound a little complicated, but you really just set the base from your 2nd table down flat with the finished side up, and then set your fully assembled table on top of it.  I did not pre-drill any holes and they all screwed in very easily without stripping.  It&#8217;s worth mentioning again that it did feel like it&#8217;d be easy to strip the wood, so don&#8217;t over tighten.</li>
<li>Reminder, finished side of the base goes up.  You don&#8217;t want the bottom of your rack decorated while the visible base section is unfinished wood.  You can see from my pictures how the top/bottom are oriented and the way I used the brackets to mount the tables together.</li>
<li>You should now have a mostly fully functioning &#8220;lack rack&#8221; &#8211; Congratulations!  Now if you like, go ahead and flip it upside down and screw on your caster style wheels to the bottom.</li>
<li>And there you go, you should be all set.</li>
</ul>
<p><a href="https://www.ericvb.com/wp-content/uploads/2014/08/IMG_20140804_092230.jpg"><img decoding="async" loading="lazy" class="size-medium wp-image-3889 aligncenter" src="https://www.ericvb.com/wp-content/uploads/2014/08/IMG_20140804_092230-243x300.jpg" alt="" width="243" height="300" srcset="http://www.ericvb.com/wp-content/uploads/2014/08/IMG_20140804_092230-243x300.jpg 243w, http://www.ericvb.com/wp-content/uploads/2014/08/IMG_20140804_092230-829x1024.jpg 829w, http://www.ericvb.com/wp-content/uploads/2014/08/IMG_20140804_092230-768x949.jpg 768w, http://www.ericvb.com/wp-content/uploads/2014/08/IMG_20140804_092230-1243x1536.jpg 1243w, http://www.ericvb.com/wp-content/uploads/2014/08/IMG_20140804_092230-624x771.jpg 624w, http://www.ericvb.com/wp-content/uploads/2014/08/IMG_20140804_092230.jpg 1657w" sizes="(max-width: 243px) 100vw, 243px" /></a></p>
<p>I might find a way to add some sides to this build to clean it up a little bit.  It also could use some cable management.  And as I stated earlier I may end up putting some rails along the sides.  I&#8217;ll call this my stage 1 for a decent home lab lack rack.  Total cost?  About 35 dollars.  Hope this helps if you&#8217;re considering a build!</p>
]]></content:encoded>
					
					<wfw:commentRss>http://www.ericvb.com/archives/how-to-build-an-ikea-lack-rack-for-your-home-lab/feed</wfw:commentRss>
			<slash:comments>5</slash:comments>
		
		
			</item>
		<item>
		<title>Getting Started on Centralized Logging with Logstash, Elasticsearch and Kibana</title>
		<link>http://www.ericvb.com/archives/getting-started-on-centralized-logging-with-logstash-elasticsearch-and-kibana</link>
					<comments>http://www.ericvb.com/archives/getting-started-on-centralized-logging-with-logstash-elasticsearch-and-kibana#comments</comments>
		
		<dc:creator><![CDATA[Vanberge]]></dc:creator>
		<pubDate>Sun, 05 Jan 2014 03:29:05 +0000</pubDate>
				<category><![CDATA[Tech]]></category>
		<category><![CDATA[logstash]]></category>
		<category><![CDATA[sysadmin]]></category>
		<guid isPermaLink="false">http://www.ericvb.com/?p=3639</guid>

					<description><![CDATA[As a sysadmin, one of the &#8220;rainy day&#8221; things on my to-do list for some time has been exploring centralized logging.  I&#8217;ve done a few proof of concept style quick implementations throughout the years but have never been able to secure budget or resources to see it to completion.  Splunk was too expensive, and the [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>As a sysadmin, one of the &#8220;rainy day&#8221; things on my to-do list for some time has been exploring centralized logging.  I&#8217;ve done a few proof of concept style quick implementations throughout the years but have never been able to secure budget or resources to see it to completion.  Splunk was too expensive, and the open source ones I tried required too much effort to be worth while back then.  This time, however,  I was more determined to make something stick.  With that, I began searching out some of the more popular open source tools.</p>
<p>I considered various combinations of things like Fluentd, Graylog2, Octopussy, etc.  In the end, I settled on going with the Logstash/Elasticsearch/Kibana stack.  All of these free, open source tools are powerful in their own right &#8211; but they&#8217;re designed to work together and are <strong>immensely</strong> powerful when combined.  Logstash collects, ships, filters, and makes logs consistent.  Elasticsearch creates indices and searchability of the logs.  And finally, Kibana gives you a great web interface to analyze all your log data.  Here&#8217;s a screenshot of it all coming together for me.  This is a custom Kibana dashboard showing syslog output from all my VMware servers:</p>
<p><a href="http://www.ericvb.com/wp-content/uploads/2014/01/Custom-Kibana-dashboard.png"><img decoding="async" loading="lazy" class="alignnone wp-image-3676 size-medium" src="http://www.ericvb.com/wp-content/uploads/2014/01/Custom-Kibana-dashboard-300x138.png" alt="Custom-Kibana-dashboard" width="300" height="138" srcset="http://www.ericvb.com/wp-content/uploads/2014/01/Custom-Kibana-dashboard-300x138.png 300w, http://www.ericvb.com/wp-content/uploads/2014/01/Custom-Kibana-dashboard.png 945w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Before diving into the steps, I feel the need to point out that I&#8217;ve had a great time learning and setting up these tools.  I honestly haven&#8217;t been this excited about using software since first trying VMware ESX server.   I can&#8217;t stop working on it.  It&#8217;s become an addiction for me to continuously improve, filter, and make sense of various logs.  It&#8217;s really very rewarding to be able to visualize your log data in such a usable way.  Everything was  pretty easy to set up at a basic level, and the open source community was there for me via #logstash on IRC when I needed help taking things further or had any questions.  The setup of these tools <em>can</em> feel a little daunting to a newcomer with so many options and such a degree of configurability/customization, so I wanted to provide a step-by-step guide for how I ended up with an initial deployment.</p>
<p>A couple prerequisite disclaimer points before I get started</p>
<ul>
<li>I chose to use Ubuntu server.  This is a personal preference, and certainly this guide can be helpful if you choose a different OS.  Use whatever OS you feel comfortable with.</li>
<li>For the purposes of this guide, all 3 tools will be run on one server.  It is possible (even recommended depending on your workload) to separate them onto different servers.</li>
<li>This is a &#8220;getting started&#8221; guide.  These tools can certainly be taken much further than I take them here.  They can be integrated with a message broker like Redis or RabbitMQ.  I&#8217;ll consider going into deeper options such as these in a followup enhanced configuration guide vs. here in the getting started guide.</li>
</ul>
<p>Now  let&#8217;s get into the setup!</p>
<ol>
<li>Get a webserver and PHP installed on your server.  I much prefer apache or nginx as the webserver.  Logstash does has a built in webserver that you can run, but I much prefer running a separate webserver.  In Ubuntu, I just went with the entire LAMP stack.   This is as easy as &#8220;<strong>apt-get install lamp-server</strong>&#8220;.</li>
<li>Install a java runtime.  Again, easy in Ubuntu via <strong>apt-get install openjdk-7-jre-headless</strong></li>
<li>Download the three components.  I downloaded gzip archives of each, but depending on your OS, there may be packages built for it.  Choose whichever way you&#8217;re more comfortable with.
<ul>
<li><strong>Elasticsearch</strong> (index) via: <a href="http://www.elasticsearch.org/download/">http://www.elasticsearch.org/download/</a></li>
<li><strong>Logstash</strong> (collection) via: <a href="http://www.elasticsearch.org/overview/logstash/">http://www.elasticsearch.org/overview/logstash/</a></li>
<li><strong>Kibana</strong> (web interface) via: <a href="http://www.elasticsearch.org/overview/kibana/">http://www.elasticsearch.org/overview/kibana/</a></li>
</ul>
</li>
<li>Extract the archives (tar -xvf &lt;filename&gt;.tgz) and place the files where you want them. I chose /opt for logstash and elasticsearch, and then Kibana goes in your web root.  I did it as follows, an;d I&#8217;ll continue to reference these directories in the rest of the guide.
<ul>
<li>Extracted Elasticsearch tgz to /opt/elasticsearch</li>
<li>Placed the Logstash jar in /opt/logstash</li>
<li>Extracted Kibana tgz to my web root folder, /var/www/kibana &#8211; there was no special configuration needed other than putting the files here.</li>
</ul>
</li>
<li>Edit your Elasticsearch config file (/opt/elasticsearch/config/elasticsearch.yml) and make 2 edits:
<ul>
<li>Find the line that says &#8220;cluster.name&#8221; and uncomment it, setting a name for your new Elasticsearch cluster.</li>
<li>Look for &#8220;node.name&#8221; and set the node name as well.</li>
<li>Note that you don&#8217;t have to set these variables.  If you don&#8217;t set these, Elasticsearch will set them randomly for you, but it is handy to know which server you&#8217;re looking at if you ever have to expand your setup so I recommend setting them.</li>
</ul>
</li>
<li>Go ahead and start Elasticsearch by running <strong>/opt/elasticsearch/bin/elasticsearch</strong></li>
<li>Create a basic logstash.conf file.  I created an /opt/logstash/logstash.conf with an initial config something like this, which just creates local file inputs.
<pre>input {
file {
type => "linux-syslog"
path => [ "/var/log/*.log", "/var/log/messages", "/var/log/syslog" ]
}
}
output {
stdout { }
elasticsearch { cluster => "YourclusterName" }
}</pre>
<p>This input section is defined to look at and ingest files defined in the path array variable. Then the output section is setting to output to stdout (your command window) and also to elasticsearch where you define your cluster name. This is a very basic config to easily show us things are working.</li>
<li>Now fire up Logstash by running:  <strong>/opt/logstash/bin/logstash agent -f /opt/logstash/logstash.conf</strong></li>
<li>You should now see logstash initialize and all of the events it indexes should get output to your terminal via the stdout output, in addition to getting pushed over to elasticsearch where we should see them with Kibana.</li>
<li>If you extracted Kibana as noted in step 4, then you should be able to browse to your server and check out your data!  Try http://yourserver/kibana and you should be greeted with an introduction screen. You&#8217;ll see they have a pre-configured logstash dashboard that you can click on and save as your default</li>
<li>Once you see your data is indeed visible through Kibana, we can dive into further configuration of logstash.  If something&#8217;s off and you don&#8217;t see data, check out the <a href="http://logstash.net/docs/1.3.2/">logstash docs</a> or jump into #logstash on irc.freenode.net where people are very happy to help.  Once you&#8217;re satisfied that it is working, you may want to remove the stdout line from the output section and only have your output go to Elasticsearch for indexing.</li>
<li>Now that we know things are functional, we can set up some additional logstash configs to further improve things
<ul>
<li>First, let&#8217;s set up a very common input for remote systems to dump syslogs into Logstash</li>
<li>Edit your logstash.conf again and add a syslog to your input section like this:
<pre>syslog {
type => "syslog"
}</pre>
</li>
<li>With the Logstash syslog input, you can specify the port, add tags, and set a bunch of other options. Make sure to check out the documentation for each input you add to your config. For syslog, visit http://logstash.net/docs/1.3.2/inputs/syslog for example.</li>
<li>Next, we&#8217;ll want to set up a filter section of our config. The filter below makes sure we get a FQDN for the host by using a reverse DNS lookup and replacing the host variable with that (without this, many hosts just report an IP address), and then additionally adds a tag &#8220;VMware&#8221; for any host matching &#8220;esx&#8221; in the hostname. Pending your host names contain &#8220;esx&#8221; somewhere in them, this example makes it easy for browsing VMware syslog data through Kibana. You can certainly tailor these to any host names or even other fields you like. Logstash&#8217;s filtering and grok parsing are very powerful capabilities. This example is enough to give you an idea of the structure and how the logic works. Again, I can&#8217;t stress enough to dig into the docs and hop on IRC for help.  Overall, the filter section is probably where you&#8217;ll end up spending most of your time.
<pre>filter {
if [type] == "syslog" {
dns {
reverse => [ "host" ] action => "replace"
}
if [host] =~ /.*?(esx).*?(yourdomain)?/ {
mutate { add_tag => [ "VMware" ] }
}
}
}</pre>
</li>
<li>Once you get your logstash.conf tweaked, restart Logstash.  <strong>ps -ef | grep logstash</strong> and then kill the process.  Restart it the same way you did in step 8.</li>
</ul>
</li>
<li><span style="line-height: 1.5em;">Now we&#8217;re ready to have some servers to dump syslogs to your new central log server! I started with VMware and Ubuntu and branched out from there. Depending on your OS or the syslog implementation, the method of sending logs to a remote syslog host varies.  Check your OS documentation for how to do this.  The default port is 514, which is default for the syslog input and typically remote hosts sending syslog data.</span></li>
<li><span style="line-height: 1.5em;">Check out Kibana now and hopefully you see log entries.  Click through on hosts, on tags, try creating a new dashboard displaying only your &#8220;VMware&#8221; tagged logs. Etc Etc Etc &#8211; hopefully you can see your filters in action and how it helps bring consistency to your log data.</span></li>
<li>Keep exploring the Logstash docs for more inputs.  Windows servers, Cisco devices, apache or IIS logs, Exchange, etc.  I don&#8217;t think there&#8217;s a sysadmin out there who has a shortage of log data they could/should be analyzing.</li>
<li>Document your setup as you go so you can remember it later. <img src="https://s.w.org/images/core/emoji/14.0.0/72x72/1f642.png" alt="🙂" class="wp-smiley" style="height: 1em; max-height: 1em;" /></li>
</ol>
<p>I hope this startup guide has been helpful to getting a base configuration.  Keep in mind that Logstash has a plethora of inputs, outputs codecs and filters.  Make sure to check out all the documentation at <a href="http://logstash.net/docs/1.3.2/">http://logstash.net/docs/1.3.2/</a> and tailor this awesome tool to your needs.  If you have a system logging, chances are there&#8217;s an input or plugin for it.</p>
<p>A few bonus tips</p>
<ul>
<li>Check out <a href="http://www.elasticsearch.org/videos/">http://www.elasticsearch.org/videos/</a>, particularly &#8220;Introduction to Logstash&#8221;</li>
<li>Install a few awesome plugins for Elasticsearch
<ul>
<li>/opt/elasticsearch/bin/plugin -install karmi/elasticsearch-paramedic</li>
<li>/opt/elasticsearch/bin/plugin -install royrusso/elasticsearch-HQ</li>
<li>/opt/elasticsearch/bin/plugin -install mobz/elasticsearch-head</li>
</ul>
</li>
<li>Move your logstash dashboard to default by browsing to /var/www/kibana/app/dashboards and copying logstash.json to default.json.  Maybe save default.json off as default.json.orig or something first.</li>
<li>Make sure to visit the <a href="http://cookbook.logstash.net/">Logstash community cookbook</a>.</li>
</ul>
]]></content:encoded>
					
					<wfw:commentRss>http://www.ericvb.com/archives/getting-started-on-centralized-logging-with-logstash-elasticsearch-and-kibana/feed</wfw:commentRss>
			<slash:comments>4</slash:comments>
		
		
			</item>
		<item>
		<title>Building a Serviceguard Cluster on HP-UX 11.31</title>
		<link>http://www.ericvb.com/archives/building-a-serviceguard-cluster-on-hp-ux-11-31</link>
					<comments>http://www.ericvb.com/archives/building-a-serviceguard-cluster-on-hp-ux-11-31#respond</comments>
		
		<dc:creator><![CDATA[Vanberge]]></dc:creator>
		<pubDate>Thu, 06 Jun 2013 15:55:07 +0000</pubDate>
				<category><![CDATA[Tech]]></category>
		<category><![CDATA[HP-UX]]></category>
		<category><![CDATA[sysadmin]]></category>
		<guid isPermaLink="false">http://www.ericvb.com/?p=3578</guid>

					<description><![CDATA[I have recently been working alot with HP-UX.  A big part of that work relates to managing Serviceguard clusters, something I have had little previous experience doing.  It was a challenge for me to find any sort of a quick start guide or simplified steps towards building a Serviceguard cluster, so I wanted to combine [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>I have recently been working alot with HP-UX.  A big part of that work relates to managing Serviceguard clusters, something I have had little previous experience doing.  It was a challenge for me to find any sort of a quick start guide or simplified steps towards building a Serviceguard cluster, so I wanted to combine all the pieces and parts I have Googled and man-paged together so the next person can hopefully find this useful.</p>
<p>Prerequisites</p>
<ul>
<li>Two hosts (nodes) running the same build of HP-UX</li>
<li>Same version of Serviceguard installed</li>
</ul>
<p>Here are the steps to build a ServiceGuard cluster on HP-UX 11.31</p>
<ol>
<li>Run <strong>csshsetup &lt;secondary nodename&gt;</strong> on your primary node, enter the root password.</li>
<li>Run <strong>csshsetup &lt;primary nodename&gt;</strong> on your secondary node, enter the root password.</li>
<li>Run <strong>cmpreparecl -n &lt;primarynode&gt; -n &lt;secondarynode&gt; </strong>to set up the Serviceguard relationship settings</li>
<li>Create a basic cluster configuration file by running <strong>cmquerycl -v -C &lt;clustername.ascii&gt; -n &lt;primarynode&gt; -n &lt;secondarynode&gt;</strong></li>
<li>Edit the newly created ascii file to your specific needs, noting things like:
<ul>
<li>Cluster name</li>
<li>IPs</li>
<li>Quorum server hosts or volume group</li>
<li>Cluster shares storage/volume groups</li>
<li>Take some extra time here, this is really important!</li>
</ul>
</li>
<li>Validate the cluster config file by running <strong>cmcheckconf -C &lt;clustername.ascii&gt;</strong>.  Deal with any warnings or errors that are of concern.  (The setup will apply with warnings, but they should still be considered)</li>
<li>Apply the config and create the cluster by running <strong>cmapplyconf -v -C &lt;clustername.ascii&gt;</strong>.</li>
<li>Review all the output and make sure the cluster relationship was successful; run <strong>cmviewcl</strong> which should show both nodes, likely in a &#8220;down&#8221; state</li>
<li>You can bring up the nodes now if you want, starting with the primary node by running <strong>cmrunnode &lt;nodename&gt;</strong>. Run <strong>cmviewcl</strong> again to check and make sure everything looks good.  You&#8217;ll see a cluster, and nodes but no packages yet</li>
<li>Now its time to create some packages.  This is where the real meat of Serviceguard starts to develop, so pay special attention to these configurations
<ul>
<li>You can create a very basic template config by running <strong>cmmakepkg -m sg/failover -m sg/package_ip &lt;packageconfig.conf&gt;</strong> &#8211; which would give you failover and IP capabilities</li>
<li>Or, you could create a &#8220;full&#8221; config by running <strong>cmmakepkg -m sg/all &lt;packageconfig.conf&gt;</strong>.</li>
<li>Edit the package config file to suit your needs, consider adding: IP Addresses, package names, filesystems and volume groups</li>
</ul>
</li>
<li>When you&#8217;ve got your package config file in order, you can validate it by running <strong>cmcheckconf -v -P &lt;packageconfig.conf&gt;</strong>.</li>
<li>Review your output and check for any errors.  If you&#8217;re satisfied with everything, go ahead and apply the config to create your cluster package!  <strong>cmapplyconf -P &lt;packageconfig.conf&gt;</strong></li>
<li>Run a <strong>cmviewcl</strong> again to check out the cluster now, you should see your newly created cluster package, in a down state.</li>
<li>To  bring the package online, run <strong>cmrunpkg -n &lt;nodename&gt; &lt;packagename&gt;</strong> and then make sure it is up and running (with another <strong>cmviewcl</strong>)</li>
<li>Optionally, you can set the package up for auto run by <strong>cmmodpkg -e &lt;packagename&gt;</strong> to allow it to startup automatically after a failover.</li>
</ol>
<p>You can also use the HP systems management homepage to click through the steps of creating a Serviceguard cluster, but really where&#8217;s the fun in that? <img src="https://s.w.org/images/core/emoji/14.0.0/72x72/1f642.png" alt="🙂" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>A list of some of the useful commands to use for Serviceguard clusters:</p>
<ul>
<li>cmviewcl</li>
<li>cmquerycl</li>
<li>cmrunpkg</li>
<li>cmhaltpkg</li>
<li>cmrunnode</li>
<li>cmcheckconf</li>
<li>cmapplyconf</li>
<li>cmmakepkg</li>
</ul>
]]></content:encoded>
					
					<wfw:commentRss>http://www.ericvb.com/archives/building-a-serviceguard-cluster-on-hp-ux-11-31/feed</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
